clusters = source, target
source.bootstrap.servers = broker1:9093,broker2:9093,broker3:9093
target.bootstrap.servers = replica-broker1:9093,replica-broker2:9093,replica-broker3:9093

# SSL configuration for source cluster
source.security.protocol=SSL
source.ssl.truststore.location=/opt/bitnami/kafka/config/certs/mirrormaker.truststore.jks
source.ssl.truststore.password=test1234
source.ssl.keystore.location=/opt/bitnami/kafka/config/certs/kafka.mirrormaker.keystore.jks
source.ssl.keystore.password=test1234
source.ssl.key.password=test1234
source.ssl.endpoint.identification.algorithm=

# SSL configuration for target cluster
target.security.protocol=SSL
target.ssl.truststore.location=/opt/bitnami/kafka/config/certs/mirrormaker.truststore.jks
target.ssl.truststore.password=test1234
target.ssl.keystore.location=/opt/bitnami/kafka/config/certs/kafka.mirrormaker.keystore.jks
target.ssl.keystore.password=test1234
target.ssl.key.password=test1234
target.ssl.endpoint.identification.algorithm=

# Replication factors
replication.factor=3
checkpoints.topic.replication.factor=3
heartbeats.topic.replication.factor=3
offset-syncs.topic.replication.factor=3
offset.storage.replication.factor=3
status.storage.replication.factor=3
config.storage.replication.factor=3

# What to replicate
topics = .*
groups = .*
topics.exclude = __.*
groups.exclude = __.*

# Sync configurations
sync.topic.acls.enabled=true
sync.topic.configs.enabled=true
refresh.topics.enabled=true
refresh.topics.interval.seconds=60
refresh.groups.enabled=true
refresh.groups.interval.seconds=60


metadata.max.age.ms=30000  # Refresh metadata every 30 seconds
delivery.timeout.ms=120000 # Total timeout for send
request.timeout.ms=30000   # Per-request timeout

emit.checkpoints.interval.seconds=60
emit.heartbeats.interval.seconds=5
sync.group.offsets.enabled=true
sync.group.offsets.interval.seconds=60
